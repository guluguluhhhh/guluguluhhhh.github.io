<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>MIT6.5840 - Category - 华子的博客</title>
        <link>https://guluguluhhhh.github.io/categories/mit6.5840/</link>
        <description>MIT6.5840 - Category - 华子的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 02 Mar 2025 18:49:48 &#43;0800</lastBuildDate><atom:link href="https://guluguluhhhh.github.io/categories/mit6.5840/" rel="self" type="application/rss+xml" /><item>
    <title>Mit6.5840 Raft</title>
    <link>https://guluguluhhhh.github.io/mit6.5840-raft/</link>
    <pubDate>Sun, 02 Mar 2025 18:49:48 &#43;0800</pubDate>
    <author>huazi</author>
    <guid>https://guluguluhhhh.github.io/mit6.5840-raft/</guid>
    <description><![CDATA[<h2 id="3a-领导人选举">3A 领导人选举</h2>
<p>3A主要实现的是领导者选举和心跳（没有日志条目的<code>AppendEntries</code>RPC）。</p>
<p>基本上根据论文的图2来定义结构体。Raft结构体加上electionTimeOut bool来标记某个服务器是否超时，超时未收到心跳需要发起新一轮选举。
</p>]]></description>
</item>
<item>
    <title>Mit6.5840 KVServer</title>
    <link>https://guluguluhhhh.github.io/mit6.5840-kvserver/</link>
    <pubDate>Tue, 18 Feb 2025 16:00:38 &#43;0800</pubDate>
    <author>huazi</author>
    <guid>https://guluguluhhhh.github.io/mit6.5840-kvserver/</guid>
    <description><![CDATA[<h1 id="keyvalue-server">Key/Value Server</h1>
<p>本次试验中，将为一台机器构建一个键值服务器，该服务器确保即使网络故障，每个操作<strong>也只执行一次</strong>，且操作是<strong>线性化</strong>的。后面的实验将会复制这样的服务器来处理服务器崩溃。</p>]]></description>
</item>
<item>
    <title>Mit6.5840 MapReduce</title>
    <link>https://guluguluhhhh.github.io/mit6.5840-mapreduce/</link>
    <pubDate>Sat, 15 Feb 2025 14:45:18 &#43;0800</pubDate>
    <author>huazi</author>
    <guid>https://guluguluhhhh.github.io/mit6.5840-mapreduce/</guid>
    <description><![CDATA[<h1 id="mapreduce">MapReduce</h1>
<p>这次实验将构建一个MapReduce系统。需要实现一个<strong>worker</strong>进程，它调用应用程序<strong>Map</strong>和<strong>Reduce</strong>函数并处理阅读和写入文件，以及一个<strong>coordinator</strong>进程，它将任务分发给worker并处理失败的worker。</p>]]></description>
</item>
</channel>
</rss>
